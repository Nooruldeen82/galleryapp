{"version":3,"sources":["APIKey.jsx","components/layout/Navbar.jsx","components/layout/Footer.jsx","components/home/SearchForm.jsx","actions/searchActions.jsx","actions/actionTypes.jsx","components/home/PictureCard.jsx","components/home/PicturesContainer.jsx","components/layout/Spinner.jsx","components/home/Landing.jsx","reducers/searchReducer.jsx","reducers/index.jsx","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","Navbar","react_default","a","createElement","className","Footer","SearchForm","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleChange","e","props","searchPicture","target","value","handleSubmit","preventDefault","fetchPictures","text","setLoading","inherits","createClass","key","id","onSubmit","type","name","placeholder","onChange","Component","connect","state","pictures","dispatch","payload","axios","get","then","response","data","hits","catch","err","console","log","PictureCard","picture","src","largeImageURL","alt","PicturesContainer","content","map","index","home_PictureCard","Spinner","role","style","width","height","Landing","loading","home_SearchForm","layout_Spinner","home_PicturesContainer","initialState","combineReducers","undefined","action","objectSpread","logger","createLogger","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","es","layout_Navbar","home_Landing","layout_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb7a6bd3.chunk.js","sourcesContent":["module.exports = {\n  APIKey: \"14064819-016974b60f76eb7762d1403a3\"\n};\n","import React from \"react\";\n\nfunction Navbar() {\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 bg-dark p-3 text-center text-white\">\n        <h1>Gallery App with React-Redux</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <div className=\"p-3 mt-4 text-center bg-dark text-light\">\n          Developed By:\n          <span className=\"text-warning font-weight-normal\">Noormedia</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport {\n  searchPicture,\n  fetchPictures,\n  setLoading\n} from \"../../actions/searchActions\";\n\nexport class SearchForm extends Component {\n  handleChange = e => {\n    this.props.searchPicture(e.target.value);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.fetchPictures(this.props.text);\n    this.props.setLoading();\n  };\n\n  render() {\n    return (\n      <div className=\"jumbotron jumbotron-fluid bg-info mt-5 text-center\">\n        <div className=\"container\">\n          <h1 className=\"display-4 mb-3\">\n            <i className=\"fa fa-search\" /> Search for beautiful images\n          </h1>\n          <form id=\"searchForm\" onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"searchText\"\n              placeholder=\"Type here: Animals, flowers, . . .\"\n              onChange={this.handleChange}\n            />\n            <button type=\"submit\" className=\"btn btn-dark btn-bg mt-3\">\n              Search\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  text: state.pictures.text\n});\n\nexport default connect(mapStateToProps, {\n  searchPicture,\n  fetchPictures,\n  setLoading\n})(SearchForm);\n","import { SEARCH_PICTURE, FETCH_PICTURES, LOADING } from \"./actionTypes\";\nimport axios from \"axios\";\n\nimport { APIKey } from \"../APIKey\";\n\nexport const searchPicture = text => dispatch => {\n  dispatch({\n    type: SEARCH_PICTURE,\n    payload: text\n  });\n};\n\nexport const fetchPictures = text => dispatch => {\n  axios\n    .get(`https://pixabay.com/api/?key=${APIKey}&q=${text}`)\n    .then(response =>\n      dispatch({\n        type: FETCH_PICTURES,\n        payload: response.data.hits\n      })\n    )\n    .catch(err => console.log(err));\n};\n\nexport const setLoading = () => {\n  return {\n    type: LOADING\n  };\n};\n","export const SEARCH_PICTURE = \"SEARCH_PICTURE\";\nexport const FETCH_PICTURES = \"FETCH_PICTURES\";\nexport const LOADING = \"LOADING\";\n","import React, { Component } from \"react\";\n\nexport class PictureCard extends Component {\n  // picture card\n  render() {\n    const { picture } = this.props;\n    return (\n      <div className=\"col-sm-12 col-md-6 col-lg-4 mb-5\">\n        <div className=\"card card-body text-center h-100\">\n          <img className=\"w-100 mb-2\" src={picture.largeImageURL} alt=\"Pic\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PictureCard;\n","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport PictureCard from \"./PictureCard\";\n\nexport class PicturesContainer extends Component {\n  render() {\n    const { pictures } = this.props;\n    let content = \"\";\n\n    content =\n      pictures.length > 0\n        ? pictures.map((picture, index) => (\n            <PictureCard key={index} picture={picture} />\n          ))\n        : null;\n    return <div className=\"row\">{content}</div>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  pictures: state.pictures.pictures\n});\n\nexport default connect(mapStateToProps)(PicturesContainer);\n","import React from \"react\";\n//import spinner from \"./spinner.gif\";\n\nfunction Spinner() {\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 text-center\">\n        <div\n          className=\"spinner-border text-danger\"\n          role=\"status\"\n          style={{ width: \"4rem\", height: \"4rem\" }}\n        >\n          <span className=\"sr-only text-white\">Loading...</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Spinner;\n","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport SearchForm from \"./SearchForm\";\nimport PicturesContainer from \"./PicturesContainer\";\nimport Spinner from \"../layout/Spinner\";\n\nexport class Landing extends Component {\n  render() {\n    const { loading } = this.props;\n    return (\n      <div className=\"container\">\n        <SearchForm />\n        {loading ? <Spinner /> : <PicturesContainer />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: state.pictures.loading\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import {\n  SEARCH_PICTURE,\n  FETCH_PICTURES,\n  LOADING\n} from \"../actions/actionTypes\";\n\nconst initialState = {\n  text: \"\",\n  pictures: [],\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SEARCH_PICTURE:\n      return {\n        ...state,\n        text: action.payload,\n        loading: false\n      };\n    case FETCH_PICTURES:\n      return {\n        ...state,\n        pictures: action.payload,\n        loading: false\n      };\n\n    case LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport searchReducer from \"./searchReducer\";\n\nexport default combineReducers({\n  pictures: searchReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport rootReducer from \"./reducers\";\nimport { createLogger } from \"redux-logger\";\n\nconst logger = createLogger();\nconst middleware = [thunk, logger];\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport \"./App.css\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Footer from \"./components/layout/Footer\";\nimport Landing from \"./components/home/Landing\";\nimport store from \"./store\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"container-fluid\">\n          <Navbar />\n          <Landing />\n          <Footer />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}